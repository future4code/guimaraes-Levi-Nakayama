{"version":3,"sources":["img/favorite-white.svg","img/favorite.svg","img/comment_icon.svg","components/IconeComContador/IconeComContador.js","components/SecaoComentario/SecaoComentario.js","components/Post/Post.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","IconContainer","styled","div","IconImage","img","IconeComContador","props","alt","src","icone","onClick","onClickIcone","valorContador","CommentContainer","InputComentario","input","SecaoComentario","useState","comentario","setComentario","placeholder","value","onChange","event","console","log","target","aoEnviar","PostContainer","PostHeader","PostFooter","UserPhoto","PostPhoto","Post","state","curtido","numeroCurtidas","comentando","numeroComentarios","onClickCurtida","setState","onClickComentario","aoEnviarComentario","onChangeComentario","iconeCurtida","componenteComentario","this","iconeCoracaoPreto","iconeCoracaoBranco","fotoUsuario","nomeUsuario","fotoPost","iconeComentario","React","Component","MainContainer","App","userName","userPicture","userPost","posts","adicionarPost","novaLista","push","onChangeUserName","enviarPost","newPost","post","map","index","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,4XCG3C,IAAMC,EAAgBC,IAAOC,IAAV,KAGbC,EAAYF,IAAOG,IAAV,KAIR,SAASC,EAAiBC,GAChC,OAAO,kBAACN,EAAD,KACN,kBAACG,EAAD,CAAWI,IAAK,QAASC,IAAKF,EAAMG,MAAOC,QAASJ,EAAMK,eAC1D,2BAAIL,EAAMM,gB,6UCTZ,IAAMC,EAAmBZ,IAAOC,IAAV,KAMhBY,EAAkBb,IAAOc,MAAV,KAyBNC,EAnBS,SAACV,GAAW,IAAD,EAEEW,mBAAS,IAFX,mBAE3BC,EAF2B,KAEfC,EAFe,KASlC,OAAO,kBAACN,EAAD,KACN,kBAACC,EAAD,CACCM,YAAa,gBACbC,MAAOH,EACPI,SATyB,SAACC,GAC1BC,QAAQC,IAAI,QAASF,EAAMG,OAAOL,OAClCF,EAAcI,EAAMG,OAAOL,UAS5B,4BAAQX,QAASJ,EAAMqB,UAAvB,Y,0sBCrBF,IAAMC,EAAgB3B,IAAOC,IAAV,KAMb2B,EAAa5B,IAAOC,IAAV,KAOV4B,EAAa7B,IAAOC,IAAV,KAQV6B,EAAY9B,IAAOG,IAAV,KAOT4B,EAAY/B,IAAOG,IAAV,KA6EA6B,E,2MAxEbC,MAAQ,CACNC,SAAS,EACTC,eAAgB,EAChBC,YAAY,EACZC,kBAAmB,G,EAGrBC,eAAiB,WACf,EAAKC,SAAS,CACZL,SAAU,EAAKD,MAAMC,QACrBC,eAAiB,EAAKF,MAAMC,QAAyC,EAAKD,MAAME,eAAiB,EAA5D,EAAKF,MAAME,eAAiB,K,EAIrEK,kBAAoB,WAClB,EAAKD,SAAS,CACZH,YAAa,EAAKH,MAAMG,c,EAI5BK,mBAAqB,WACnB,EAAKF,SAAS,CACZH,YAAY,EACZC,kBAAmB,EAAKJ,MAAMI,kBAAoB,K,EAItDK,mBAAqB,SAACpB,GACpBC,QAAQC,IAAI,SAAUF,I,wEAItB,IAAIqB,EAQAC,EAMJ,OAXED,EADCE,KAAKZ,MAAMC,QACGY,IAEAC,IAKdF,KAAKZ,MAAMG,aACZQ,EAAuB,kBAAC,EAAD,CAAiBlB,SAAUmB,KAAKJ,sBAGlD,kBAACd,EAAD,KACL,kBAACC,EAAD,KACE,kBAACE,EAAD,CAAWvB,IAAKsC,KAAKxC,MAAM2C,YAAa1C,IAAK,sBAC7C,2BAAIuC,KAAKxC,MAAM4C,cAGjB,kBAAClB,EAAD,CAAWxB,IAAKsC,KAAKxC,MAAM6C,SAAU5C,IAAK,mBAE1C,kBAACuB,EAAD,KACE,kBAACzB,EAAD,CACEI,MAAOmC,EACPjC,aAAcmC,KAAKP,eACnB3B,cAAekC,KAAKZ,MAAME,iBAG5B,kBAAC/B,EAAD,CACEI,MAAO2C,IACPzC,aAAcmC,KAAKL,kBACnB7B,cAAekC,KAAKZ,MAAMI,qBAG7BO,O,GApEYQ,IAAMC,W,wKCtCzB,IAAMC,EAAgBtD,IAAOC,IAAV,KAyFFsD,E,2MAhFbtB,MAAQ,CACRuB,SAAW,GACXC,YAAa,GACbC,SAAU,GACVC,MAAO,CAEL,CACEV,YAAY,WACZD,YAAY,8BACZE,SAAS,mC,EASbU,cAAgB,WACd,IAAMC,EAAS,YAAO,EAAK5B,MAAMyB,UAEjCG,EAAUC,KAAK,EAAK7B,MAAMuB,SAAU,EAAKvB,MAAMwB,YAAa,EAAKxB,MAAMyB,UACvE,EAAKnB,SAAS,CACZoB,MAAOE,K,EAKXE,iBAAmB,SAACzC,GAClB,EAAKiB,SAAU,CAACiB,SAAUlC,EAAMG,OAAOL,QACvCG,QAAQC,IAAK,EAAKS,MAAMuB,W,EAG1BQ,WAAa,WACX,IAAIC,EAAO,YAAO,EAAKhC,MAAM0B,OACzBO,EAAO,CACTjB,YAAa,EAAKhB,MAAMuB,SACxBR,YAAa,8BACbE,SAAU,iCAEZ3B,QAAQC,IAAIyC,EAAQH,KAAKI,IAEzB3C,QAAQC,IAAIyC,GAEZ,EAAK1B,SAAS,CAACoB,MAAOM,K,wEAKtB,OACM,kBAACX,EAAD,KACN,2BAAOlC,MAAOyB,KAAKZ,MAAMuB,SAClBnC,SAAUwB,KAAKkB,iBACf5C,YAAa,SAGpB,2BAAOA,YAAa,SAGpB,2BAAOA,YAAa,SAEpB,4BAAQV,QAASoC,KAAKmB,YAAtB,UAEKnB,KAAKZ,MAAM0B,MAAMQ,KAAK,SAACD,EAAME,GAE3B,OACG,kBAAC,EAAD,CAAMC,IAAKD,EACTnB,YAAaiB,EAAKjB,YAClBD,YAAakB,EAAKlB,YAClBE,SAAUgB,EAAKhB,mB,GAtEbE,IAAMC,WCANiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.a702f119.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favorite-white.042aa417.svg\";","module.exports = __webpack_public_path__ + \"static/media/favorite.4c67d875.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment_icon.de299b47.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\nconst IconContainer = styled.div`\n\tdisplay: flex;\n`\nconst IconImage = styled.img`\n\tmargin-right: 5px;\n`\n\nexport function IconeComContador(props) {\n\treturn <IconContainer>\n\t\t<IconImage alt={'Icone'} src={props.icone} onClick={props.onClickIcone}/>\n\t\t<p>{props.valorContador}</p>\n\t</IconContainer>\n}\n","import React, {Component } from 'react'\nimport { useState } from 'react'\nimport styled from 'styled-components'\n\nconst CommentContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 5px;\n`\n\nconst InputComentario = styled.input`\n    width: 100%;\n    margin-right: 5px;\n\tcolor: black;\n`\n\nconst SecaoComentario = (props) => {\n\t\n\tconst [comentario, setComentario] = useState('');\n\n\tconst onChangeComentario = (event) => {\n\t\t console.log(\"Secao\", event.target.value);\n\t\t setComentario(event.target.value);\n\t}\n\n\treturn <CommentContainer>\n\t\t<InputComentario\n\t\t\tplaceholder={'ComentÃ¡rio'}\n\t\t\tvalue={comentario}\n\t\t\tonChange={onChangeComentario}\n\t\t/>\n\t\t<button onClick={props.aoEnviar}>Enviar</button>\n\t</CommentContainer>\t\n}\n\nexport default SecaoComentario;\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport {IconeComContador} from '../IconeComContador/IconeComContador'\n\nimport iconeCoracaoBranco from '../../img/favorite-white.svg'\nimport iconeCoracaoPreto from '../../img/favorite.svg'\nimport iconeComentario from '../../img/comment_icon.svg'\nimport SecaoComentario from '../SecaoComentario/SecaoComentario'\n\nconst PostContainer = styled.div`\n  border: 1px solid gray;\n  width: 300px;\n  margin-bottom: 10px;\n`\n\nconst PostHeader = styled.div`\n  height: 40px;\n  display: flex;\n  align-items: center;\n  padding-left: 10px;\n`\n\nconst PostFooter = styled.div`\n  height: 40px;\n  display: flex;\n  align-items: center;\n  padding: 0 10px;\n  justify-content: space-between;\n`\n\nconst UserPhoto = styled.img`\n  height: 30px;\n  width: 30px;\n  margin-right: 10px;\n  border-radius: 50%;\n`\n\nconst PostPhoto = styled.img`\n  width: 100%;\n`\n\nclass Post extends React.Component {\n  state = {\n    curtido: false,\n    numeroCurtidas: 0,\n    comentando: false,\n    numeroComentarios: 0\n  }\n\n  onClickCurtida = () => {\n    this.setState({ \n      curtido: !this.state.curtido,\n      numeroCurtidas: !this.state.curtido? this.state.numeroCurtidas + 1 : this.state.numeroCurtidas - 1\n    });\n  }\n\n  onClickComentario = () => {\n    this.setState({\n      comentando: !this.state.comentando\n    })\n  }\n\n  aoEnviarComentario = () => {\n    this.setState({\n      comentando: false,\n      numeroComentarios: this.state.numeroComentarios + 1\n    })\n  }\n\n  onChangeComentario = (event) => {\n    console.log(\"POST: \", event)\n  }\n\n  render() {\n    let iconeCurtida\n\n    if(this.state.curtido) {\n      iconeCurtida = iconeCoracaoPreto\n    } else {\n      iconeCurtida = iconeCoracaoBranco\n    }\n\n    let componenteComentario\n\n    if(this.state.comentando) {\n      componenteComentario = <SecaoComentario aoEnviar={this.aoEnviarComentario}/>\n    }\n\n    return <PostContainer>\n      <PostHeader>\n        <UserPhoto src={this.props.fotoUsuario} alt={'Imagem do usuario'}/>\n        <p>{this.props.nomeUsuario}</p>\n      </PostHeader>\n\n      <PostPhoto src={this.props.fotoPost} alt={'Imagem do post'}/>\n\n      <PostFooter>\n        <IconeComContador\n          icone={iconeCurtida}\n          onClickIcone={this.onClickCurtida}\n          valorContador={this.state.numeroCurtidas}\n        />\n\n        <IconeComContador\n          icone={iconeComentario}\n          onClickIcone={this.onClickComentario}\n          valorContador={this.state.numeroComentarios}\n        />\n      </PostFooter>\n      {componenteComentario}\n    </PostContainer>\n  }\n}\n\nexport default Post","import React from 'react';\nimport styled from 'styled-components'\nimport Post from './components/Post/Post';\n\nconst MainContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`\n\n\n  class App extends React.Component {\n    state = {\n    userName:  '', \n    userPicture: '',\n    userPost: '',\n    posts: [\n      \n      {\n        nomeUsuario:'Paulinha',\n        fotoUsuario:'https://picsum.photos/50/50',\n        fotoPost:'https://picsum.photos/200/150'\n      },\n\n      \n    ]\n    }\n\n\n\n    adicionarPost = () => {\n      const novaLista = [...this.state.userPost];\n\n      novaLista.push(this.state.userName, this.state.userPicture, this.state.userPost);\n      this.setState({\n        posts: novaLista\n      })\n\n    }\n\n    onChangeUserName = (event) => {\n      this.setState ({userName: event.target.value})\n      console.log (this.state.userName)\n    }\n\n    enviarPost = () => {\n      var newPost = [...this.state.posts]\n      var post = {\n        nomeUsuario: this.state.userName, \n        fotoUsuario: 'https://picsum.photos/50/51',\n        fotoPost: 'https://picsum.photos/200/152'\n      }\n      console.log(newPost.push(post));\n\n      console.log(newPost)\n\n      this.setState({posts: newPost})\n    }\n\n\n    render() {\n      return (\n            <MainContainer>\n      <input value={this.state.userName} \n             onChange={this.onChangeUserName}\n             placeholder={\"nome\"}/>\n             \n\n      <input placeholder={\"foto\"}/>\n\n             \n      <input placeholder={\"post\"}/>\n\n      <button onClick={this.enviarPost}>Enviar</button>\n\n          {this.state.posts.map( (post, index) => \n           {            \n             return (\n                <Post key={index} \n                  nomeUsuario={post.nomeUsuario}\n                  fotoUsuario={post.fotoUsuario}\n                  fotoPost={post.fotoPost}\n                />\n             )\n           } \n          )}\n        </MainContainer>\n      \n      );\n    }\n  }\n  \n  export default App;\n  \n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}