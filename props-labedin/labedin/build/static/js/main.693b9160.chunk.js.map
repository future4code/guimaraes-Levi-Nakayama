{"version":3,"sources":["components/img/levi-foto.jpg","components/img/marmotex.jpg","components/CardGrande/CardGrande.js","components/ImagemButton/ImagemButton.js","components/CardPequeno/CardPequeno.js","components/CardEnd/CardEnd.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","EstiloCardGrande","styled","div","CardGrande","props","src","imagem","nome","descricao","EstiloButton","ImagemButton","texto","CardPequeno","className","email","CardEnd","end","App","Profile","Marmotex","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,ylBCG3C,IAAMC,EAAmBC,IAAOC,IAAV,KAwCPC,MAZf,SAAoBC,GAChB,OACI,kBAACJ,EAAD,KACI,yBAAKK,IAAMD,EAAME,SACjB,6BACI,4BAAMF,EAAMG,MACZ,2BAAKH,EAAMI,c,iQCjC3B,IAAMC,EAAeR,IAAOC,IAAV,KA0BHQ,MAZf,SAAsBN,GAClB,OACI,kBAACK,EAAD,KACA,yBAAKJ,IAAMD,EAAME,SACjB,2BAAKF,EAAMO,S,MCPJC,MAZf,SAAqBR,GACjB,OACI,yBAAKS,UAAU,mBACX,yBAAKR,IAAMD,EAAME,SACjB,6BACI,sCAAaF,EAAMU,U,MCOpBC,MAZf,SAAiBX,GACb,OACI,yBAAKS,UAAU,iBACX,yBAAKR,IAAMD,EAAME,SACjB,6BACI,oCAAWF,EAAMY,Q,kCCwDlBC,MApDf,WACE,OACE,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,0BACb,8CACA,kBAAC,EAAD,CACEP,OAAUY,IACVX,KAAK,wBACLC,UAAU,6HAGZ,kBAAC,EAAD,CACEF,OAAO,0DACPK,MAAM,cAIV,yBAAKE,UAAU,0BACb,kBAAC,EAAD,CAAaC,MAAO,qBAGtB,yBAAKD,UAAU,0BACb,kBAAC,EAAD,CAASG,IAAK,wBAGhB,yBAAKH,UAAU,0BACb,6DACA,kBAAC,EAAD,CACEP,OAAUa,IACVZ,KAAK,WACLC,UAAU,0nBAMd,yBAAKK,UAAU,0BACb,oDACA,kBAAC,EAAD,CACEP,OAAO,sFACPK,MAAM,aAGR,kBAAC,EAAD,CACEL,OAAO,2EACPK,MAAM,eC7CIS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.693b9160.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/levi-foto.3a91853b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/marmotex.bab38d69.jpg\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst EstiloCardGrande = styled.div`\n\ndisplay: flex;\nalign-items: center;\nborder: 1px solid black;\npadding: 20px 10px;\nmargin-bottom: 10px;\nheight: 350px;\n\n\nimg {\nwidth: 70px;\nmargin-right: 10px;\nborder-radius: 50%;\n}\n\nh4 {\nmargin-bottom: 15px;\n}\n\ndiv {\ndisplay: flex;\nflex-direction: column;\njustify-items: flex-start;\n}\n\n`\n\nfunction CardGrande(props) {\n    return (\n        <EstiloCardGrande>\n            <img src={ props.imagem } />\n            <div>\n                <h4>{ props.nome }</h4>\n                <p>{ props.descricao }</p>\n            </div>\n        </EstiloCardGrande>\n    )\n}\n\nexport default CardGrande;","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst EstiloButton = styled.div`\ndisplay: flex;\nalign-items: center;\nborder: 1px solid black;\nborder-radius: 50px;\nwidth: 200px;\npadding: 15px 30px;\nmargin: 10px auto;\n\nimg{\nwidth: 30px;\nmargin-right: 10px;\n}`\n\nfunction ImagemButton(props) {\n    return (\n        <EstiloButton>\n        <img src={ props.imagem }/>\n        <p>{ props.texto }</p>\n        </EstiloButton>\n       \n       \n\n    )\n}\n\nexport default ImagemButton;","import React from 'react';\nimport './CardPequeno.css'\n\nfunction CardPequeno(props) {\n    return (\n        <div className=\"small-container\">\n            <img src={ props.imagem } />\n            <div>\n                <h4>Email: { props.email }</h4>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default CardPequeno;","import React from 'react';\nimport './CardEnd.css'\n\nfunction CardEnd(props) {\n    return (\n        <div className=\"end-container\">\n            <img src={ props.imagem } />\n            <div>\n                <h4>End: { props.end }</h4>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default CardEnd;","import React from 'react';\nimport { scryRenderedComponentsWithType } from 'react-dom/test-utils';\nimport './App.css';\nimport CardGrande from './components/CardGrande/CardGrande';\nimport ImagemButton from './components/ImagemButton/ImagemButton';\nimport CardPequeno from './components/CardPequeno/CardPequeno';\nimport CardEnd from './components/CardEnd/CardEnd';\nimport Profile from './components/img/levi-foto.jpg';\nimport Marmotex from './components/img/marmotex.jpg';\nimport styled from 'styled-components';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"page-section-container\">\n        <h2>Dados pessoais</h2>\n        <CardGrande \n          imagem= { Profile} \n          nome=\"Levi Shiniti Nakayama\" \n          descricao=\"Bem vindo ao meu site pessoal, aqui tem a brincadeira de 5 curiosidades sobre mim, que tal descobrir essa nova trend???.\"\n        />\n        \n        <ImagemButton \n          imagem=\"https://image.flaticon.com/icons/png/512/117/117472.png\" \n          texto=\"Ver mais\"\n        />\n      </div>\n\n      <div className=\"page-section-container\">\n        <CardPequeno email={\"email@email.com\"} />               \n      </div>\n\n      <div className=\"page-section-container\">\n        <CardEnd end={\"Rua Faria Limers 7\"} />               \n      </div>\n\n      <div className=\"page-section-container\">\n        <h2>Experiências profissionais</h2>\n        <CardGrande \n          imagem= { Marmotex}\n          nome=\"Mamortex\" \n          descricao=\"Foi a minha primeira experiência com startups e tudo que engloba. Conheci o universo de investidores, ventures e etc, participei de rodadas de negócios e até tivemos que criar contratos específicos para isso. Foi mto legal ser um co-founder e junto ver o quanto que cresceu. Vi como se usa um hack na vida real kkkk utilzei também todas as ferramentas mais legais como trello, klipfolio entre outras que esqueci. Fomos case de estudo em universidades e foi uma pena não termos concluído uma fusão com outra empresa mas não me arrependo de nada. Se ficou curioso podemos conversar e eu te conto melhor.\" \n        />\n        \n        \n      </div>\n\n      <div className=\"page-section-container\">\n        <h2>Minhas redes sociais</h2>\n        <ImagemButton \n          imagem=\"https://d2v9ipibika81v.cloudfront.net/uploads/sites/261/2017/01/facebook-logo-3.png\" \n          texto=\"Facebook\" \n        />        \n\n        <ImagemButton \n          imagem=\"https://logodownload.org/wp-content/uploads/2014/09/twitter-logo-1-1.png\" \n          texto=\"Twitter\" \n        />        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}